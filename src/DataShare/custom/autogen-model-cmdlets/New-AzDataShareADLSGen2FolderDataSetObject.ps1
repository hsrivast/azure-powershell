
# ----------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# Code generated by Microsoft (R) AutoRest Code Generator.Changes may cause incorrect behavior and will be lost if the code
# is regenerated.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Create an in-memory object for ADLSGen2FolderDataSet.
.Description
Create an in-memory object for ADLSGen2FolderDataSet.

.Outputs
Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20210801.ADLSGen2FolderDataSet
.Link
https://docs.microsoft.com/powershell/module/az.DataShare/new-AzDataShareADLSGen2FolderDataSetObject
#>
function New-AzDataShareADLSGen2FolderDataSetObject {
    [OutputType('Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20210801.ADLSGen2FolderDataSet')]
    [CmdletBinding(PositionalBinding=$false)]
    Param(

        [Parameter(Mandatory, HelpMessage="File system to which the folder belongs.")]
        [string]
        $FileSystem,
        [Parameter(Mandatory, HelpMessage="Folder path within the file system.")]
        [string]
        $FolderPath,
        [Parameter(Mandatory, HelpMessage="Resource group of storage account.")]
        [string]
        $ResourceGroup,
        [Parameter(Mandatory, HelpMessage="Storage account name of the source data set.")]
        [string]
        $StorageAccountName,
        [Parameter(Mandatory, HelpMessage="Subscription id of storage account.")]
        [string]
        $SubscriptionId,
        [Parameter(Mandatory, HelpMessage="Kind of data set.")]
        [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.DataShare.Support.DataSetKind])]
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Support.DataSetKind]
        $Kind,
        [Parameter(HelpMessage="The timestamp of resource creation (UTC).")]
        [System.DateTime]
        $SystemDataCreatedAt,
        [Parameter(HelpMessage="The identity that created the resource.")]
        [string]
        $SystemDataCreatedBy,
        [Parameter(HelpMessage="The type of identity that created the resource.")]
        [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.DataShare.Support.CreatedByType])]
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Support.CreatedByType]
        $SystemDataCreatedByType,
        [Parameter(HelpMessage="The type of identity that last modified the resource.")]
        [System.DateTime]
        $SystemDataLastModifiedAt,
        [Parameter(HelpMessage="The identity that last modified the resource.")]
        [string]
        $SystemDataLastModifiedBy,
        [Parameter(HelpMessage="The type of identity that last modified the resource.")]
        [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.DataShare.Support.LastModifiedByType])]
        [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Support.LastModifiedByType]
        $SystemDataLastModifiedByType
    )

    process {
        $Object = [Microsoft.Azure.PowerShell.Cmdlets.DataShare.Models.Api20210801.ADLSGen2FolderDataSet]::New()

        if ($PSBoundParameters.ContainsKey('FileSystem')) {
            $Object.FileSystem = $FileSystem
        }
        if ($PSBoundParameters.ContainsKey('FolderPath')) {
            $Object.FolderPath = $FolderPath
        }
        if ($PSBoundParameters.ContainsKey('ResourceGroup')) {
            $Object.ResourceGroup = $ResourceGroup
        }
        if ($PSBoundParameters.ContainsKey('StorageAccountName')) {
            $Object.StorageAccountName = $StorageAccountName
        }
        if ($PSBoundParameters.ContainsKey('SubscriptionId')) {
            $Object.SubscriptionId = $SubscriptionId
        }
        if ($PSBoundParameters.ContainsKey('Kind')) {
            $Object.Kind = $Kind
        }
        if ($PSBoundParameters.ContainsKey('SystemDataCreatedAt')) {
            $Object.SystemDataCreatedAt = $SystemDataCreatedAt
        }
        if ($PSBoundParameters.ContainsKey('SystemDataCreatedBy')) {
            $Object.SystemDataCreatedBy = $SystemDataCreatedBy
        }
        if ($PSBoundParameters.ContainsKey('SystemDataCreatedByType')) {
            $Object.SystemDataCreatedByType = $SystemDataCreatedByType
        }
        if ($PSBoundParameters.ContainsKey('SystemDataLastModifiedAt')) {
            $Object.SystemDataLastModifiedAt = $SystemDataLastModifiedAt
        }
        if ($PSBoundParameters.ContainsKey('SystemDataLastModifiedBy')) {
            $Object.SystemDataLastModifiedBy = $SystemDataLastModifiedBy
        }
        if ($PSBoundParameters.ContainsKey('SystemDataLastModifiedByType')) {
            $Object.SystemDataLastModifiedByType = $SystemDataLastModifiedByType
        }
        return $Object
    }
}

